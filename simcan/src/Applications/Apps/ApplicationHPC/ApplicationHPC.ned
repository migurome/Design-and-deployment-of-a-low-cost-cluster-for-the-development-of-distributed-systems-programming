// Module that implements a GenericApp.
//
// This Application models a generic behavior of a HPC application
//
// @author Alberto N&uacute;&ntilde;ez Covarrubias
// @date 2010-11-30
package SIMCAN.Applications.Apps.ApplicationHPC;

import SIMCAN.Applications.SimcanAPI.SimcanAPI;



simple ApplicationHPC extends SimcanAPI{
    
    parameters:
          		
        bool allToAllConnections = default (false);				// Connect all processes between themselves? 
        int workersSet;											// Number of processes per set (1 coordinator and workersSet-1 workers)
        
        int dataSet @unit(MiB) = default (100MiB);				// Data-set size        
        int sliceToWorkers @unit(MiB) = default(5MiB);			// Slice of data (in Mbytes) processed by each worker process
        int sliceToCoordinator @unit(MiB) = default(1MiB);		// Slice of data (in Mbytes) generated by each worker process
        int sliceCPU = default(1000000);						// CPU (in MIs) to process a slice of data
        
        string inputFilePrefix = default ("/inputFile");		// Input file names = prefix + _ + fileIndex + .dat
        string outputFilePrefix = default ("/outputFile");		// Output file names = prefix + _ + fileIndex + .dat

        bool workersRead  = default (false);					// Worker processes read
        bool workersWrite  = default (false);					// Worker processes write  
        bool showLog = default (true);							// Show log messages
        
        @class(ApplicationHPC);
}

